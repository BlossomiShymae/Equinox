package views.pages;

import com.google.inject.Inject;
import com.google.inject.Singleton;
import services.EventAggregatorService;
import utils.mvvm.PropertyChangedEventArgs;
import viewmodels.controls.NotificationCardViewModel;
import viewmodels.pages.NotificationsViewModel;
import views.controls.NotificationCard;

import javax.swing.*;
import java.awt.*;

@Singleton
public class NotificationsPage extends Page {
    private final NotificationsViewModel viewModel;
    private final EventAggregatorService eventAggregator;
    private JPanel rootPanel;
    private JPanel controlPanel;
    private JButton clearNotificationsButton;
    private JScrollPane scrollPanel;
    private JPanel notificationsPanel;

    @Inject
    public NotificationsPage(NotificationsViewModel notificationsViewModel, EventAggregatorService eventAggregatorService) {
        super();
        add(rootPanel);
        viewModel = notificationsViewModel;
        eventAggregator = eventAggregatorService;

        notificationsPanel.setLayout(new BoxLayout(notificationsPanel, BoxLayout.PAGE_AXIS));
        notificationsPanel.setAlignmentY(JPanel.TOP_ALIGNMENT);
        viewModel.propertyChanged.subscribe(this::onPropertyChanged);
        clearNotificationsButton.addActionListener(e -> viewModel.clearNotificationsCommand());
    }

    private void onPropertyChanged(PropertyChangedEventArgs e) {
        notificationsPanel.removeAll();
        var notifications = viewModel.getNotificationHistory();
        for (var notification : notifications) {
            var card = new NotificationCard(new NotificationCardViewModel(notification, eventAggregator));
            notificationsPanel.add(card);
        }
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        rootPanel = new JPanel();
        rootPanel.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(2, 1, new Insets(0, 0, 0, 0), -1, -1));
        controlPanel = new JPanel();
        controlPanel.setLayout(new GridBagLayout());
        rootPanel.add(controlPanel, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        clearNotificationsButton = new JButton();
        clearNotificationsButton.setText("Clear Notifications");
        GridBagConstraints gbc;
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 0;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        controlPanel.add(clearNotificationsButton, gbc);
        final JPanel spacer1 = new JPanel();
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 0;
        gbc.weightx = 1.0;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        controlPanel.add(spacer1, gbc);
        scrollPanel = new JScrollPane();
        rootPanel.add(scrollPanel, new com.intellij.uiDesigner.core.GridConstraints(1, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0, false));
        notificationsPanel = new JPanel();
        notificationsPanel.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        scrollPanel.setViewportView(notificationsPanel);
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return rootPanel;
    }
}
